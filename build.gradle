buildscript {
  repositories {
    //maven {
    //  url 'https://oss.sonatype.org/content/repositories/snapshots/'
    //}
    mavenCentral()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:1.1.3'
    classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
  }
}

// Manifest version information!
def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

repositories {
  //maven {
  //  url 'https://oss.sonatype.org/content/repositories/snapshots/'
  //}
  mavenCentral()
}

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

def isTravis = "true".equals(System.getenv("TRAVIS"))
def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))

android {
  compileSdkVersion 22
  buildToolsVersion '22.0.1'

  dexOptions {
    // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
    preDexLibraries = preDexEnabled && !isTravis
  }

  signingConfigs {
    u2020 {
      storeFile file('u2020.keystore')
      storePassword 'android'
      keyAlias 'android'
      keyPassword 'android'
    }
  }

  defaultConfig {
    minSdkVersion 15
    targetSdkVersion 22

    versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
    versionName "${versionMajor}.${versionMinor}.${versionPatch}"

    signingConfig signingConfigs.u2020

    buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
    buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
  }

  buildTypes {
    debug {
      applicationIdSuffix '.debug'
    }
  }

  productFlavors {
    internal {
      applicationId 'com.jakewharton.u2020.internal'
    }
    production {
      applicationId 'com.jakewharton.u2020'
    }
  }

  lintOptions {
    textReport true
    textOutput 'stdout'
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }
}

// TODO remove eventually: http://b.android.com/162285
configurations {
  internalDebugCompile
}

dependencies {
  compile 'com.android.support:support-v4:22.1.0'
  compile 'com.android.support:support-annotations:22.1.0'
  compile 'com.android.support:appcompat-v7:22.1.0'
  compile 'com.android.support:recyclerview-v7:22.1.0'

  compile 'com.squareup.dagger:dagger:1.2.2'
  apt 'com.squareup.dagger:dagger-compiler:1.2.2'

  compile 'com.squareup.okhttp:okhttp:2.3.0'
  compile 'com.squareup.picasso:picasso:2.5.2'
  compile 'com.squareup.retrofit:retrofit:1.9.0'
  internalDebugCompile 'com.squareup.retrofit:retrofit-mock:1.9.0'

  compile 'com.jakewharton:butterknife:6.1.0'
  compile 'com.jakewharton.timber:timber:3.0.1'
  compile 'com.jakewharton.byteunits:byteunits:0.9.0'
  internalDebugCompile 'com.jakewharton.madge:madge:1.1.1'
  internalDebugCompile 'com.jakewharton.scalpel:scalpel:1.1.1'

  compile 'io.reactivex:rxjava:1.0.8'
  compile 'io.reactivex:rxandroid:0.24.0'

  compile 'net.danlew:android.joda:2.7.1'
  internalCompile 'com.mattprecious.telescope:telescope:1.4.0@aar'
}

def installAll = tasks.create('installAll')
installAll.description = 'Install all applications.'
android.applicationVariants.all { variant ->
  installAll.dependsOn(variant.install)
  // Ensure we end up in the same group as the other install tasks.
  installAll.group = variant.install.group
}
