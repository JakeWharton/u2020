buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:0.11.+'
    classpath 'com.jakewharton.hugo:hugo-plugin:1.1.+'
    classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.10.+'
  }
}

// Manifest version information!
def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

apply plugin: 'android-sdk-manager'
apply plugin: 'android'
apply plugin: 'hugo'

repositories {
  mavenCentral()
}

dependencies {
  compile 'com.android.support:support-v4:19.1.+'

  compile 'com.squareup.dagger:dagger:1.2.1'
  provided 'com.squareup.dagger:dagger-compiler:1.2.1'

  compile 'com.squareup.okhttp:okhttp:1.6.0'
  compile 'com.squareup.okhttp:okhttp-urlconnection:1.6.0'
  compile 'com.squareup.picasso:picasso:2.3.2'
  compile 'com.squareup.retrofit:retrofit:1.6.0'
  debugCompile 'com.squareup.retrofit:retrofit-mock:1.6.0'

  compile 'com.jakewharton:butterknife:5.1.0'
  compile 'com.jakewharton.timber:timber:2.3.0'
  debugCompile 'com.jakewharton.madge:madge:1.1.1'
  debugCompile 'com.jakewharton.scalpel:scalpel:1.1.2'

  compile 'com.netflix.rxjava:rxjava-core:0.19.0'
  compile 'com.netflix.rxjava:rxjava-android:0.19.0'

  compile 'com.etsy.android.grid:library:1.0.5'
}

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

def isTravis = "true".equals(System.getenv("TRAVIS"))
def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))

android {
  compileSdkVersion 19
  buildToolsVersion "19.1.0"

  dexOptions {
    // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
    preDexLibraries = preDexEnabled && !isTravis
  }

  defaultConfig {
    minSdkVersion 14
    targetSdkVersion 19

    versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
    versionName "${versionMajor}.${versionMinor}.${versionPatch}"

    buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
    buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
  }

  buildTypes {
    debug {
      applicationIdSuffix '.dev'
      versionNameSuffix '-dev'
    }
  }

  lintOptions {
    abortOnError false
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }
}
